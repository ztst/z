Znaika\FrontendBundle\Entity\Lesson\Content\VideoComment:
    type: entity
    table: video_comment
    repositoryClass: Znaika\FrontendBundle\Repository\Lesson\Content\VideoCommentDBRepository
    fields:
        videoCommentId: { column: video_comment_id, type: integer, id: true, generator: { strategy: AUTO } }
        text:           { type: text, notnull: true }
        commentType:    { column: comment_type, type: smallint, notnull: true }
        isAnswered:     { column: is_answered, type: boolean }
        status:         { type: smallint }
        createdTime:    { column: created_time, type: datetime, columnDefinition: TIMESTAMP DEFAULT CURRENT_TIMESTAMP }
    manyToOne:
        video:
            targetEntity: Znaika\FrontendBundle\Entity\Lesson\Content\Video
            inversedBy: videoComments
            joinColumn:
                name: video_id
                referencedColumnName: video_id
                onDelete: CASCADE
        user:
            targetEntity: Znaika\FrontendBundle\Entity\Profile\User
            inversedBy: videoComments
            joinColumn:
                name: user_id
                referencedColumnName: user_id
                onDelete: "SET NULL"
        question:
            targetEntity: Znaika\FrontendBundle\Entity\Lesson\Content\VideoComment
            inversedBy: answers
            joinColumn:
                name: quiestion_id
                referencedColumnName: video_comment_id
                onDelete: CASCADE
    oneToMany:
        answers:
            targetEntity: Znaika\FrontendBundle\Entity\Lesson\Content\VideoComment
            mappedBy: question
    lifecycleCallbacks: {  }
