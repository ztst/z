Znaika\ProfileBundle\Entity\Badge\BaseUserBadge:
    type: entity
    table: user_badge
    repositoryClass: Znaika\ProfileBundle\Repository\Badge\UserBadgeDBRepository
    fields:
        userBadgeId: { column: user_badge_id, type: integer, id: true, generator: { strategy: AUTO } }
        isViewed:    { column: is_viewed, type: boolean }
        createdTime: { column: created_time, type: datetime, columnDefinition: TIMESTAMP DEFAULT CURRENT_TIMESTAMP }
    manyToOne:
        user:
            targetEntity: Znaika\ProfileBundle\Entity\User
            inversedBy: userBadges
            joinColumn:
                name: user_id
                referencedColumnName: user_id
                onDelete: "SET NULL"
    inheritanceType: SINGLE_TABLE
    discriminatorColumn:
        fieldName: badgeType
        name: badge_type
        type: smallint
    discriminatorMap:
        0: Znaika\ProfileBundle\Entity\Badge\BaseUserBadge
        1: Znaika\ProfileBundle\Entity\Badge\FilledOutProfileBadge
        2: Znaika\ProfileBundle\Entity\Badge\VideoViewerBadge
        3: Znaika\ProfileBundle\Entity\Badge\LearnerBadge
        4: Znaika\ProfileBundle\Entity\Badge\CommentWriterBadge
        5: Znaika\ProfileBundle\Entity\Badge\ReferralInviterBadge
        6: Znaika\ProfileBundle\Entity\Badge\SocialNetworkPosterBadge
        7: Znaika\ProfileBundle\Entity\Badge\VideoRaterBadge

    lifecycleCallbacks: {  }